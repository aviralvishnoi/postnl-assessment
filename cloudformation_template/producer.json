{
    "Parameters": {
        "Environment": {
            "Type": "String",
            "Default": "dev"
        },
        "ProducerApplicationName": {
            "Type": "String",
            "Default": "IncomingOrders"
        },
        "ProducerName": {
            "Type": "String",
            "Default": "Team99"
        },
        "BusinessUnit": {
            "Type": "String",
            "Default": "Logistics"
        },
        "TypeOfEndpoint": {
            "Type": "String",
            "Default": "HTTP"
        },
        "LatestS3ObjectVersion": {
            "Type": "String",
            "Default": "EXpXMJQ7tLAzOPTdlmW.qEkYGvpy7O.x"
        }
    },
    "Resources": {
        "EventPublisherLambdaIamRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/AmazonEventBridgeFullAccess"
                ],
                "RoleName": {
                    "Fn::Sub": "role-${ProducerApplicationName}-${ProducerName}-${BusinessUnit}-${TypeOfEndpoint}-${Environment}"
                }
            }
        },
        "EventPublisherLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "artifacts-s3-postnl-eb-assignment-eb-dev",
                    "S3Key": {
                        "Fn::Sub": "lambda/lambda_function.zip"
                    },
                    "S3ObjectVersion": {
                        "Ref": "LatestS3ObjectVersion"
                    }
                },
                "Role": {
                    "Fn::GetAtt": [
                        "EventPublisherLambdaIamRole",
                        "Arn"
                    ]
                },
                "Environment": {
                    "Variables": {
                        "DETAIL_TYPE": {
                            "Fn::Sub": "${ProducerApplicationName}-${ProducerName}-${BusinessUnit}-${TypeOfEndpoint}-${Environment}"
                        }
                    }
                },
                "FunctionName": {
                    "Fn::Sub": "lambda-${ProducerApplicationName}-${ProducerName}-${BusinessUnit}-${TypeOfEndpoint}-${Environment}"
                },
                "Handler": "lambda_function.lambda_handler",
                "Runtime": "python3.9"
            },
            "DependsOn": [
                "EventPublisherLambdaIamRole"
            ]
        },
        "EventPublisherRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {
                    "Fn::Sub": "restapi-${ProducerApplicationName}-${ProducerName}-${BusinessUnit}-${TypeOfEndpoint}-${Environment}"
                }
            }
        },
        "EventPublisherApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "EventPublisherRestApi"
                },
                "Description": "Rest api to publish event to "
            },
            "DependsOn": [
                "EventPublisherPostMethod",
                "EventPublisherApiResource",
                "EventPublisherApiModel",
                "EventPublisherApiValidator"
            ]
        },
        "EventPublisherApiStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "RestApiId": {
                    "Ref": "EventPublisherRestApi"
                },
                "DeploymentId": {
                    "Ref": "EventPublisherApiDeployment"
                },
                "StageName": {
                    "Ref": "Environment"
                }
            }
        },
        "EventPublisherApiResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "ParentId": {
                    "Fn::GetAtt": [
                        "EventPublisherRestApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "event_publisher",
                "RestApiId": {
                    "Ref": "EventPublisherRestApi"
                }
            }
        },
        "EventPublisherLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "EventPublisherLambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "EventPublisherRestApi"
                            },
                            "/",
                            {
                                "Ref": "EventPublisherApiStage"
                            },
                            "/POST/event_publisher"
                        ]
                    ]
                }
            }
        },
        "EventPublisherLambdaPermissionTestInvoke": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "EventPublisherLambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "EventPublisherRestApi"
                            },
                            "/test-invoke-stage/POST/event_publisher"
                        ]
                    ]
                }
            }
        },
        "EventPublisherPostMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "ResourceId": {
                    "Ref": "EventPublisherApiResource"
                },
                "RestApiId": {
                    "Ref": "EventPublisherRestApi"
                },
                "ApiKeyRequired": true,
                "AuthorizationType": "NONE",
                "Integration": {
                    "IntegrationHttpMethod": "POST",
                    "RequestTemplates": {
                        "application/json": "{ \"statusCode\": \"200\" }"
                    },
                    "Type": "AWS_PROXY",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "EventPublisherLambda",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    }
                },
                "RequestModels": {
                    "application/json": {
                        "Ref": "EventPublisherApiModel"
                    }
                },
                "RequestValidatorId": {
                    "Ref": "EventPublisherApiValidator"
                }
            }
        },
        "EventPublisherApiUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "Properties": {
                "ApiStages": [
                    {
                        "ApiId": {
                            "Ref": "EventPublisherRestApi"
                        },
                        "Stage": {
                            "Ref": "EventPublisherApiStage"
                        },
                        "Throttle": {
                            "/event_publisher/POST": {
                                "BurstLimit": 2,
                                "RateLimit": 10
                            }
                        }
                    }
                ],
                "Throttle": {
                    "BurstLimit": 2,
                    "RateLimit": 10
                },
                "UsagePlanName": "usage_plan_postnl_eb_assignment_eb_dev"
            }
        },
        "EventPublisherApiUsagePlanKey": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "Properties": {
                "KeyId": {
                    "Ref": "EventPublisherApiKey"
                },
                "KeyType": "API_KEY",
                "UsagePlanId": {
                    "Ref": "EventPublisherApiUsagePlan"
                }
            }
        },
        "EventPublisherApiKey": {
            "Type": "AWS::ApiGateway::ApiKey",
            "Properties": {
                "Enabled": true,
                "StageKeys": [
                    {
                        "RestApiId": {
                            "Ref": "EventPublisherRestApi"
                        },
                        "StageName": {
                            "Ref": "EventPublisherApiStage"
                        }
                    }
                ]
            }
        },
        "EventPublisherApiValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
                "RestApiId": {
                    "Ref": "EventPublisherRestApi"
                },
                "Name": {
                    "Fn::Sub": "EPValidator-${Environment}"
                },
                "ValidateRequestBody": true,
                "ValidateRequestParameters": true
            }
        },
        "EventPublisherApiModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
                "RestApiId": {
                    "Ref": "EventPublisherRestApi"
                },
                "ContentType": "application/json",
                "Name": "EBProducerModelDev",
                "Schema": {
                    "properties": {
                        "OrderId": {
                            "type": "string"
                        },
                        "OrderStatus": {
                            "type": "string"
                        },
                        "OrderTime": {
                            "type": "string",
                            "format": "date-time"
                        },
                        "OrderSource": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "OrderId",
                        "OrderStatus",
                        "OrderTime",
                        "OrderSource"
                    ],
                    "$schema": "http://json-schema.org/draft-04/schema#",
                    "title": "Publisher",
                    "type": "object"
                }
            }
        },
        "EventPublisherCWLGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "RetentionInDays": 7
            }
        },
        "EventPublisherEventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "EventPattern": {
                    "detail-type": [
                        {
                            "Fn::Sub": "${ProducerApplicationName}-${ProducerName}-${BusinessUnit}-${TypeOfEndpoint}-${Environment}"
                        }
                    ]
                },
                "Name": {
                    "Fn::Sub": "rule-${ProducerApplicationName}-${ProducerName}-${BusinessUnit}-${TypeOfEndpoint}-${Environment}"
                },
                "State": "ENABLED",
                "Targets": [

                ]
            }
        }
    },
    "Outputs": {},
    "Conditions": {}
}